<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script type='text/javascript' src='/javascripts/socket.io-1.3.7.js'></script>
    <script type='text/javascript' src='/javascripts/jquery-2.1.4.min.js'></script>
    <script type='text/javascript' src='/javascripts/jquery.ios-shake.js'></script>
    <script type='text/javascript' src='/javascripts/jquery.ui.shake.js'></script>

    <script src='/javascripts/fabric.js'></script>
  </head>
  <body>
    <h1><%= title %></h1>

    <script type='text/javascript' >
    	var canvasConnect = io.connect('http://172.19.200.177:3000/canvastest');
        // This is Bao Xiao's IP address. We need to change it to the server IP address.
    </script>

    <canvas id="c" width="700px" height="700px" style="border:1px solid #000000;"></canvas>

    <script type="text/javascript">
    // create a wrapper around native canvas element (with id="c")
    var canvas = new fabric.Canvas('c');

    // create a rectangle object
    var rect = new fabric.Rect({
        left: 100,
        top: 100,
        fill: 'red',
        width: 20,
        height: 20,
        });

    // "add" rectangle onto canvas
    // canvas.add(rect);

    var circle = new fabric.Circle({
        radius: 20, fill: 'green', left: 100, top:100
    });

    var triangle = new fabric.Triangle({
        width: 20, height: 30, fill: "blue", left: 50, top: 50
    });

    var ellipse = new fabric.Ellipse({ 
        fill: "black", left: 150, top: 20, rx: 10, ry: 20
    })

    var line = new fabric.Line([100,100,200,200], { stroke: "yellow", strokeWidth: 3
    })

    var points = [
        {x:10,y:10},
        {x:15,y:15},
        {x:30,y:15},
        {x:40,y:10},
        {x:30,y:0},
        {x:-10,y:-10}
    ];

    var polygon = new fabric.Polygon(points, {
        fill: "Aquamarine", left: 50, top: 120

    })

    var polyline = new fabric.Polyline(points, {
        stroke: "Sienna", strokeWidth: "3", fill: "white", left: 20, top: 150
    })

    rect.set({ left: 20, top: 50 });
    // canvas.add(rect, circle, triangle, ellipse, line, polygon);
    // canvas.add(rect);
    canvas.renderAll();
    canvas.selection = true;
    canvas.isDrawingMode = true;
    canvas.freeDrawingBrush.width = 5;

    canvas.on('object:modified', function(e) {
        canvasConnect.emit('canvasState', JSON.stringify(canvas));
    });

    canvas.on('path:created', function(e) {
        canvasConnect.emit('canvasState', JSON.stringify(canvas));
    });

    canvasConnect.on('canvasState',function(newCanvas){
        canvas.loadFromJSON(newCanvas);
        canvas.renderAll();
    });
   
    $.shake({
        callback: function()
        {
            canvas.freeDrawingBrush.color = getRandomColor();
        }
    });

    function getRandomColor() {
        var letters = '0123456789ABCDEF'.split('');
        var color = '#';
        for (var i = 0; i < 6; i++ ) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

</script>
  </body>
</html>