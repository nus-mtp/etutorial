<!DOCTYPE html>
<html>
<head>
    <title>Reindeer - Dashboard</title>
    <script type='text/javascript' src='http://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.2.0.min.js'></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.1.0/js.cookie.min.js"></script>
    <script type="text/javascript" src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,200italic,300,300italic,400,400italic' rel='stylesheet' type='text/css'>
    <link href="/stylesheets/dashboard.css" rel="stylesheet" type="text/css">
</head>
<body>

<ul class="navbar">
    <li class="navbar-item"><a class="active" href="/">Reindeer</a></li>
    <li class="navbar-item"><a class="active" href="/dashboard">Dashboard</a></li>
    <li id="logout" class="navbar-item"><a class="active" >Log out</a></li>
</ul>

<div class="user-profile-container" >
    <div class="user-profile-inner-container">
        <img class="profile-pic" src="/images/UIElements/reindeer-profile-pic.gif">
        <h1><%= user.name %></h1>
        <h1 id="id"><%= user.id %></h1>
    </div>
    <img class="my-tutorials-tab" src="/images/UIElements/my-tutorials-tab.png">
</div>

<div class="tutorial-list-container">
    <!--
        <ul id="modules">
        </ul>
     -->
</div>

<script>

    $("#logout").on("click", function(event){
        Cookies.remove('token');
        location.assign("/");
    });

    var refreshTutorialURL = "<%= urls.refreshTutorials %>";
    var createSessionURL = "<%= urls.createSessions %>";

    function getAllAvailableTutorials(message) {
        if (message.success) {
            console.log("Refresh tutorial result:", message.result);
            if (Object.keys(message.result) == 0) {
                displayNone();
            } else {
                showCourseInfo(message.result);
            }
        } else {
            console.log("Encounter Error while pulling tutorial info from server", message.message);
        }
    }

    function showCourseInfo(courseInfo) {
        addModulesToView(courseInfo);
        addTutorialSessionToModuleView(courseInfo);
        showDiv();
        addEndOfListIcon();
    }

    /**
     * ================= View Functions =================
     * ==================================================
     * */
    function addModulesToView(courseInfo) {
        var moduleList = Object.keys(courseInfo);
        for (var moduleIndex in moduleList) {
            var courseCode = escapeName(moduleList[moduleIndex]);
            var iconCode = courseCode.substring(0, 2);
            $('.tutorial-list-container').append(`
                <div class="tutorial-session" id=${courseCode}>
                    <div class="tutorial-icon">
                        <h1 class="icon-code">${iconCode}</h1>
                    </div>

                    <div class="tutorial-info">
                        <h1><b>${courseCode}</b></h1>
                    </div>

                    <div class="tutorial-buttons">

                    </div>
                </div>
            `)
        }
    }

    function addTutorialSessionToModuleView(courseInfo) {
        // Add tutorials for each modules
        var moduleList = Object.keys(courseInfo);
        for (var moduleIndex in moduleList) {

            var moduleTutorialList = courseInfo[moduleList[moduleIndex]];
            for (var tutorialIndex in moduleTutorialList) {

                var moduleName = moduleList[moduleIndex];
                var moduleIVLEInfo = moduleTutorialList[tutorialIndex];

                var moduleElement = '#' + escapeName(moduleName);
                var generalInfo = getGeneralInfo(moduleIVLEInfo);
                var moduleCode = generalInfo.courseCode;
                var moduleTitle = moduleIVLEInfo.coursename;
                var groupName = generalInfo.groupName;
                var tutorialID = getTutorialID(moduleIVLEInfo);
                var roomSessionStarted = generalInfo.roomSessionStarted;

                $(moduleElement).find('.tutorial-info').append(`
                    <h2>${moduleTitle}</h2>
                    <h2>Group: ${groupName}</h2>
                `)

                if (isTutor(generalInfo)) {
                    if (roomSessionStarted) {

                        addEndButton(moduleElement, tutorialID);
                        addJoinButton(moduleElement, tutorialID);
                        addFilesButton(moduleElement, moduleCode,groupName,tutorialID);

                    } else {

                        addCreateButton(moduleElement, tutorialID);
                        addJoinUnableButton(moduleElement, tutorialID);
                        addFilesButton(moduleElement, moduleCode,groupName,tutorialID);

                    }

                } else {
                    if (roomSessionStarted) {

                        addJoinButton(moduleElement, tutorialID);
                        addFilesButton(moduleElement, moduleCode,groupName,tutorialID);

                    } else {

                        addJoinUnableButton(moduleElement, tutorialID);
                        addFilesButton(moduleElement, moduleCode,groupName,tutorialID);
                    }
                }
            }
        }
    }

    function displayNone() {
        $('#modules').html('No Tutorial');
    }

    function addEndOfListIcon() {
        $('.tutorial-list-container').append(`
            <img class="end-of-list" src="/images/UIElements/end-of-tutorial-list.png">
        `);
    }

    function showDiv() {
        // If there are hidden divs left
        if($('div:hidden').length) {
            // Fade the first of them in
            $('div:hidden:first').fadeIn();
            // And wait one second before fading in the next one
            setTimeout(showDiv, 800);
        }
    }

    function addCreateButton(moduleElement, tutorialID) {
        $(moduleElement).find(".tutorial-buttons").append(`
            <div class="button" id="create-button">
                <h3>Create</h3>
            </div>
        `);

        $(moduleElement).find(".tutorial-buttons").find("#create-button").click( function() {
            createSession(tutorialID);
            location.reload();
        });
    }

    function addEndButton(moduleElement, tutorialID) {
        $(moduleElement).find(".tutorial-buttons").append(`
            <div class="button" id="end-button">
                <h3>End</h3>
            </div>
        `);

        $(moduleElement).find(".tutorial-buttons").find("#end-button").click( function() {
        });
    }

    function addJoinButton(moduleElement, tutorialID) {
        $(moduleElement).find(".tutorial-buttons").append(`
            <div class="button" id="join-button">
                <h3>Join</h3>
            </div>
        `);

        $(moduleElement).find(".tutorial-buttons").find("#join-button").click( function() {
            window.open("/tutorial/" + tutorialID);
        });
    }

    function addJoinUnableButton(moduleElement, tutorialID) {
        $(moduleElement).find(".tutorial-buttons").append(`
            <div class="button" id="join-unable-button">
                <h3>Not open</h3>
            </div>
        `);
    }

    function addFilesButton(moduleElement, moduleCode,groupName,tutorialID) {
        $(moduleElement).find(".tutorial-buttons").append(`
            <div class="button" id="files-button">
                <h3>Files</h3>
            </div>
        `);

        $(moduleElement).find(".tutorial-buttons").find("#files-button").click( function() {
            window.open("/workbin/" + moduleCode + "/" + groupName + "/" + tutorialID);
        });
    }







    /**
     * ========== Session Handling Functions ============
     * ==================================================
     * */
    function createSession(tutorialID) {
        $.ajax({
            type: "POST",
            url: createSessionURL,
            data: {
                token: Cookies.get('token'),
                roomID:tutorialID
            },
            success: function(result) {
                console.log(result);
            },
            error: logError("Fail to create room"),
            dataType: "JSON"
        });
    }

    /**
     * ================ Helper Functions ================
     * ==================================================
     * */

    function isTutor(generalInfo) {
        return generalInfo.role === "tutor";
    }

    function getGeneralInfo(tutorialInfo) {
        var generalInfo = {};
        generalInfo.groupName = tutorialInfo.name;
        generalInfo.week = tutorialInfo.week;
        generalInfo.day = tutorialInfo.day;
        generalInfo.time = tutorialInfo.time;
        generalInfo.role = tutorialInfo.users[0].userTutorial.role;
        generalInfo.roomSessionStarted = tutorialInfo.roomSessionStarted;
        generalInfo.courseCode = tutorialInfo.coursecode;

        return generalInfo;
    }

    function getTutorialID(tutorialInfo) {
        return tutorialInfo.id;
    }

    function escapeName(idName) {
        return escape(idName).replace(/\//g, "-");
    }

    function logError(msgHeader) {
        return function(result) {
            console.log(msgHeader, result);
        }
    }

    $(document).ready(function() {
        $.ajax({
            type: "POST",
            url: refreshTutorialURL,
            data: {token: Cookies.get('token')},
            success: getAllAvailableTutorials,
            error: logError("Fail to pull available tutorials"),
            dataType: "JSON"
        });
    });
</script>

</body>
</html>

<style>

</style>