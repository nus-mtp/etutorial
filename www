#!/usr/bin/env node

/**
 * Module dependencies.
 */

var fs = require('fs');
var app = require('./app');
var roomio = require('./source/room.io.js');
var debug = require('debug')('app:server');
var https = require('https');
var config;

/**
 * Start with a configuration file from using argument "--c=xxx.json"
 * otherwise use config.json as default
 */

if (process.env.npm_config_c){
	config = JSON.parse(fs.readFileSync(process.env.npm_config_c, 'utf8'));
} else {
	config = JSON.parse(fs.readFileSync('config.json', 'utf8'))
}

console.log(config);
app.set('server-ip', config['server-ip']);
app.set('server-port', config['server-port']);
app.set('apikey', config['apikey']);

app.listen = function() {
	var server = https.createServer(
		{
			key: fs.readFileSync('ssl/ssl.key'),
			cert: fs.readFileSync('ssl/www.genkagaku.com.crt')
		},
		this);
	return server.listen.apply(server, arguments);
}

roomio.listen(app.listen(app.get('server-port')));